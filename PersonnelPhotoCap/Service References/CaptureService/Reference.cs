//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhotoCap.CaptureService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseObj", Namespace="http://schemas.datacontract.org/2004/07/Fot.Lan")]
    [System.SerializableAttribute()]
    public partial class ResponseObj : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PhotoCap.CaptureService.CandidateViewModel> CandidatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SucceededField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PhotoCap.CaptureService.CandidateViewModel> Candidates {
            get {
                return this.CandidatesField;
            }
            set {
                if ((object.ReferenceEquals(this.CandidatesField, value) != true)) {
                    this.CandidatesField = value;
                    this.RaisePropertyChanged("Candidates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Succeeded {
            get {
                return this.SucceededField;
            }
            set {
                if ((this.SucceededField.Equals(value) != true)) {
                    this.SucceededField = value;
                    this.RaisePropertyChanged("Succeeded");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CandidateViewModel", Namespace="http://schemas.datacontract.org/2004/07/Fot.Lan.Models")]
    [System.SerializableAttribute()]
    public partial class CandidateViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CandidateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CandidateId {
            get {
                return this.CandidateIdField;
            }
            set {
                if ((this.CandidateIdField.Equals(value) != true)) {
                    this.CandidateIdField = value;
                    this.RaisePropertyChanged("CandidateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StaffResponseObj", Namespace="http://schemas.datacontract.org/2004/07/Fot.Lan")]
    [System.SerializableAttribute()]
    public partial class StaffResponseObj : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PhotoCap.CaptureService.CapturePhase CapturePhaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PhotoCap.CaptureService.StaffViewModel> StaffListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SucceededField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PhotoCap.CaptureService.CapturePhase CapturePhase {
            get {
                return this.CapturePhaseField;
            }
            set {
                if ((this.CapturePhaseField.Equals(value) != true)) {
                    this.CapturePhaseField = value;
                    this.RaisePropertyChanged("CapturePhase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PhotoCap.CaptureService.StaffViewModel> StaffList {
            get {
                return this.StaffListField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffListField, value) != true)) {
                    this.StaffListField = value;
                    this.RaisePropertyChanged("StaffList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Succeeded {
            get {
                return this.SucceededField;
            }
            set {
                if ((this.SucceededField.Equals(value) != true)) {
                    this.SucceededField = value;
                    this.RaisePropertyChanged("Succeeded");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CapturePhase", Namespace="http://schemas.datacontract.org/2004/07/Fot.Lan")]
    public enum CapturePhase : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreTest = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostTest = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StaffViewModel", Namespace="http://schemas.datacontract.org/2004/07/Fot.Lan.Models")]
    [System.SerializableAttribute()]
    public partial class StaffViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdminIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdminId {
            get {
                return this.AdminIdField;
            }
            set {
                if ((this.AdminIdField.Equals(value) != true)) {
                    this.AdminIdField = value;
                    this.RaisePropertyChanged("AdminId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="CaptureService.ImageCaptureService")]
    public interface ImageCaptureService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ImageCaptureService/GetCandidates", ReplyAction="urn:ImageCaptureService/GetCandidatesResponse")]
        PhotoCap.CaptureService.ResponseObj GetCandidates(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ImageCaptureService/GetCandidates", ReplyAction="urn:ImageCaptureService/GetCandidatesResponse")]
        System.Threading.Tasks.Task<PhotoCap.CaptureService.ResponseObj> GetCandidatesAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ImageCaptureService/UpdateCandidate", ReplyAction="urn:ImageCaptureService/UpdateCandidateResponse")]
        PhotoCap.CaptureService.ResponseObj UpdateCandidate(int CandidateId, byte[] imgBytes, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ImageCaptureService/UpdateCandidate", ReplyAction="urn:ImageCaptureService/UpdateCandidateResponse")]
        System.Threading.Tasks.Task<PhotoCap.CaptureService.ResponseObj> UpdateCandidateAsync(int CandidateId, byte[] imgBytes, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ImageCaptureService/GetStaffList", ReplyAction="urn:ImageCaptureService/GetStaffListResponse")]
        PhotoCap.CaptureService.StaffResponseObj GetStaffList(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ImageCaptureService/GetStaffList", ReplyAction="urn:ImageCaptureService/GetStaffListResponse")]
        System.Threading.Tasks.Task<PhotoCap.CaptureService.StaffResponseObj> GetStaffListAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ImageCaptureService/UpdateStaff", ReplyAction="urn:ImageCaptureService/UpdateStaffResponse")]
        PhotoCap.CaptureService.StaffResponseObj UpdateStaff(int AdminId, byte[] imgBytes, string username, string password, PhotoCap.CaptureService.CapturePhase phase);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ImageCaptureService/UpdateStaff", ReplyAction="urn:ImageCaptureService/UpdateStaffResponse")]
        System.Threading.Tasks.Task<PhotoCap.CaptureService.StaffResponseObj> UpdateStaffAsync(int AdminId, byte[] imgBytes, string username, string password, PhotoCap.CaptureService.CapturePhase phase);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ImageCaptureServiceChannel : global::PhotoCap.CaptureService.ImageCaptureService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImageCaptureServiceClient : System.ServiceModel.ClientBase<global::PhotoCap.CaptureService.ImageCaptureService>, global::PhotoCap.CaptureService.ImageCaptureService {
        
        public ImageCaptureServiceClient() {
        }
        
        public ImageCaptureServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImageCaptureServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageCaptureServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageCaptureServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PhotoCap.CaptureService.ResponseObj GetCandidates(string username, string password) {
            return base.Channel.GetCandidates(username, password);
        }
        
        public System.Threading.Tasks.Task<PhotoCap.CaptureService.ResponseObj> GetCandidatesAsync(string username, string password) {
            return base.Channel.GetCandidatesAsync(username, password);
        }
        
        public PhotoCap.CaptureService.ResponseObj UpdateCandidate(int CandidateId, byte[] imgBytes, string username, string password) {
            return base.Channel.UpdateCandidate(CandidateId, imgBytes, username, password);
        }
        
        public System.Threading.Tasks.Task<PhotoCap.CaptureService.ResponseObj> UpdateCandidateAsync(int CandidateId, byte[] imgBytes, string username, string password) {
            return base.Channel.UpdateCandidateAsync(CandidateId, imgBytes, username, password);
        }
        
        public PhotoCap.CaptureService.StaffResponseObj GetStaffList(string username, string password) {
            return base.Channel.GetStaffList(username, password);
        }
        
        public System.Threading.Tasks.Task<PhotoCap.CaptureService.StaffResponseObj> GetStaffListAsync(string username, string password) {
            return base.Channel.GetStaffListAsync(username, password);
        }
        
        public PhotoCap.CaptureService.StaffResponseObj UpdateStaff(int AdminId, byte[] imgBytes, string username, string password, PhotoCap.CaptureService.CapturePhase phase) {
            return base.Channel.UpdateStaff(AdminId, imgBytes, username, password, phase);
        }
        
        public System.Threading.Tasks.Task<PhotoCap.CaptureService.StaffResponseObj> UpdateStaffAsync(int AdminId, byte[] imgBytes, string username, string password, PhotoCap.CaptureService.CapturePhase phase) {
            return base.Channel.UpdateStaffAsync(AdminId, imgBytes, username, password, phase);
        }
    }
}
